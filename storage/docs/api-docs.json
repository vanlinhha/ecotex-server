{
    "swagger": "2.0",
    "info": {
        "title": "Laravel Generator APIs",
        "version": "1.0.0"
    },
    "host": "localhost/ecotex",
    "basePath": "/api/v1",
    "paths": {
        "/main_product_groups": {
            "get": {
                "tags": [
                    "MainProductGroups"
                ],
                "summary": "Get a listing of the MainProductGroups.",
                "description": "Get all MainProductGroups",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MainProductGroups"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "MainProductGroups"
                ],
                "summary": "Store a newly created MainProductGroups in storage",
                "description": "Store MainProductGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "MainProductGroups that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MainProductGroups"
                        },
                        "type": "string"
                    },
                    {
                        "name": "product_group_id",
                        "in": "query",
                        "description": "MainProductGroups that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MainProductGroups"
                        },
                        "type": "string"
                    },
                    {
                        "name": "percent",
                        "in": "query",
                        "description": "MainProductGroups that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MainProductGroups"
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/MainProductGroups"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/main_product_groups/{id}": {
            "get": {
                "tags": [
                    "MainProductGroups"
                ],
                "summary": "Display the specified MainProductGroups",
                "description": "Get MainProductGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of MainProductGroups",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/MainProductGroups"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MainProductGroups"
                ],
                "summary": "Update the specified MainProductGroups in storage",
                "description": "Update MainProductGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of MainProductGroups",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "MainProductGroups that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MainProductGroups"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/MainProductGroups"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "MainProductGroups"
                ],
                "summary": "Remove the specified MainProductGroups from storage",
                "description": "Delete MainProductGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of MainProductGroups",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/main_segments": {
            "get": {
                "tags": [
                    "MainSegments"
                ],
                "summary": "Get a listing of the MainSegments.",
                "description": "Get all MainSegments",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MainSegments"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "MainSegments"
                ],
                "summary": "Store a newly created MainSegments in storage",
                "description": "Store MainSegments",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "MainSegments that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MainSegments"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/MainSegments"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/main_segments/{id}": {
            "get": {
                "tags": [
                    "MainSegments"
                ],
                "summary": "Display the specified MainSegments",
                "description": "Get MainSegments",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of MainSegments",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/MainSegments"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MainSegments"
                ],
                "summary": "Update the specified MainSegments in storage",
                "description": "Update MainSegments",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of MainSegments",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "MainSegments that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MainSegments"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/MainSegments"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "MainSegments"
                ],
                "summary": "Remove the specified MainSegments from storage",
                "description": "Delete MainSegments",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of MainSegments",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/product_groups": {
            "get": {
                "tags": [
                    "ProductGroups"
                ],
                "summary": "Get a listing of the ProductGroups.",
                "description": "Get all ProductGroups",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProductGroups"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ProductGroups"
                ],
                "summary": "Store a newly created ProductGroups in storage",
                "description": "Store ProductGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "ProductGroups that should be stored",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "ProductGroups that should be stored",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/ProductGroups"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/product_groups/{id}": {
            "get": {
                "tags": [
                    "ProductGroups"
                ],
                "summary": "Display the specified ProductGroups",
                "description": "Get ProductGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of ProductGroups",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/ProductGroups"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ProductGroups"
                ],
                "summary": "Update the specified ProductGroups in storage",
                "description": "Update ProductGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of ProductGroups",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "ProductGroups that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductGroups"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/ProductGroups"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ProductGroups"
                ],
                "summary": "Remove the specified ProductGroups from storage",
                "description": "Delete ProductGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of ProductGroups",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/segment_groups": {
            "get": {
                "tags": [
                    "SegmentGroups"
                ],
                "summary": "Get a listing of the SegmentGroups.",
                "description": "Get all SegmentGroups",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SegmentGroups"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SegmentGroups"
                ],
                "summary": "Store a newly created SegmentGroups in storage",
                "description": "Store SegmentGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "SegmentGroups that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SegmentGroups"
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SegmentGroups"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/segment_groups/{id}": {
            "get": {
                "tags": [
                    "SegmentGroups"
                ],
                "summary": "Display the specified SegmentGroups",
                "description": "Get SegmentGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of SegmentGroups",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SegmentGroups"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SegmentGroups"
                ],
                "summary": "Update the specified SegmentGroups in storage",
                "description": "Update SegmentGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of SegmentGroups",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "SegmentGroups that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SegmentGroups"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SegmentGroups"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "SegmentGroups"
                ],
                "summary": "Remove the specified SegmentGroups from storage",
                "description": "Delete SegmentGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of SegmentGroups",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authenticate"
                ],
                "summary": "Authenticate user",
                "description": "Authenticate user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful authenticated",
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Invalid credential",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/sign_up": {
            "post": {
                "tags": [
                    "Authenticate"
                ],
                "summary": "Register user",
                "description": "Register user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Users"
                        },
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Users"
                        },
                        "type": "string"
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "description": "Password confirmation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Users"
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful registered",
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                },
                                "data": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Invalid Information",
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a listing of the Users.",
                "description": "Get all Users",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Users"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Store a newly created Users in storage",
                "description": "Store Users",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Users that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Users"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Display the specified Users",
                "description": "Get Users",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Users",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Users"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update the specified Users in storage",
                "description": "Update Users",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Users",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Users that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Users"
                        },
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "Users that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Users"
                        },
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Users that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Users"
                        },
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Users that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Users"
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Users"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Remove the specified Users from storage",
                "description": "Delete Users",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Users",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users_inactivated": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a listing of the inactivated Users.",
                "description": "Get all Users",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Users"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "MainProductGroups": {
            "required": [
                "user_id",
                "product_group_id"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "user_id": {
                    "description": "user_id",
                    "type": "integer",
                    "format": "int32"
                },
                "product_group_id": {
                    "description": "product_group_id",
                    "type": "integer",
                    "format": "int32"
                },
                "percent": {
                    "description": "percent",
                    "type": "number",
                    "format": "float"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "MainSegments": {
            "required": [
                "user_id",
                "segment_id"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "user_id": {
                    "description": "user_id",
                    "type": "integer",
                    "format": "int32"
                },
                "segment_id": {
                    "description": "segment_id",
                    "type": "integer",
                    "format": "int32"
                },
                "percent": {
                    "description": "percent",
                    "type": "number",
                    "format": "float"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ProductGroups": {
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "parent_id": {
                    "description": "parent_id",
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "SegmentGroups": {
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Users": {
            "required": [
                "email",
                "type",
                "first_name",
                "last_name"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "password": {
                    "description": "password",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "first_name": {
                    "description": "first_name",
                    "type": "string"
                },
                "last_name": {
                    "description": "last_name",
                    "type": "string"
                },
                "phone": {
                    "description": "phone",
                    "type": "string"
                },
                "country": {
                    "description": "country",
                    "type": "string"
                },
                "company_name": {
                    "description": "company_name",
                    "type": "string"
                },
                "brief_name": {
                    "description": "brief_name",
                    "type": "string"
                },
                "company_address": {
                    "description": "company_address",
                    "type": "string"
                },
                "website": {
                    "description": "website",
                    "type": "string"
                },
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "is_paid": {
                    "description": "is_paid",
                    "type": "integer",
                    "format": "int32"
                },
                "address": {
                    "description": "address",
                    "type": "string"
                },
                "identity_card": {
                    "description": "identity_card",
                    "type": "string"
                },
                "establishment_year": {
                    "description": "establishment_year",
                    "type": "integer",
                    "format": "int32"
                },
                "business_registration_number": {
                    "description": "business_registration_number",
                    "type": "integer",
                    "format": "int32"
                },
                "form_of_ownership": {
                    "description": "form_of_ownership",
                    "type": "string"
                },
                "number_of_employees": {
                    "description": "number_of_employees",
                    "type": "integer",
                    "format": "int32"
                },
                "floor_area": {
                    "description": "floor_area",
                    "type": "number",
                    "format": "double"
                },
                "area_of_factory": {
                    "description": "area_of_factory",
                    "type": "number",
                    "format": "double"
                },
                "commercial_service_type": {
                    "description": "commercial_service_type",
                    "type": "string"
                },
                "revenue_per_year": {
                    "description": "revenue_per_year",
                    "type": "number",
                    "format": "double"
                },
                "pieces_per_year": {
                    "description": "pieces_per_year",
                    "type": "integer",
                    "format": "int32"
                },
                "compliance": {
                    "description": "compliance",
                    "type": "string"
                },
                "activation_code": {
                    "description": "activation_code",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        }
    }
}